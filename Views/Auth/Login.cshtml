@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = "Login";
}
<h2>@Localizer["Login"]</h2>
<form asp-action="Login" method="post">
    <div class="form-group">
        <label>@Localizer["Username"]</label>
        <input name="username" class="form-control" required placeholder="@Localizer["Enter username"]" />
    </div>
    <div class="form-group">
        <label>@Localizer["Password"]</label>
        <input name="password" type="password" class="form-control" required placeholder="@Localizer["Enter password"]" />
    </div>
    <div class="form-group mt-3">
        <div class="g-recaptcha" data-sitekey="6LdYEYgrAAAAAN_BzppzDHkGv3q95RNSeKMwKHx_"></div>
    </div>
    <button type="submit" class="btn btn-primary">@Localizer["Sign In"]</button>
    <a href="/Auth/Register" class="btn btn-link">@Localizer["Register"]</a>
    <hr />
    @if (ViewBag.Error != null)
    {
        <div class="alert alert-danger mt-3">@ViewBag.Error</div>
    }
</form>
<form asp-controller="Auth" asp-action="ChangeLanguage" method="post" class="mt-3">
    <input type="hidden" name="culture" value="@(System.Threading.Thread.CurrentThread.CurrentCulture.Name == "en" ? "ar" : "en")" />
    <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
    <button type="submit" class="btn btn-secondary">
        @(System.Threading.Thread.CurrentThread.CurrentCulture.Name == "en" ? "عربي" : "English")
    </button>
</form>
@section Scripts {
    <script src="https://www.google.com/recaptcha/api.js" async defer></script>
}